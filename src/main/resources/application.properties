app.name="Interlink Configuration Management Database"
app.description="A Configuration Management Database service exposed via Restful endpoints."
server.port=${INTERLINK_HTTP_PORT:8080}

spring.application.name=interlink

# JDBC DataSource configuration
###############################
# the name of the database used by Onix to store CMDB information
database.name=${DB_NAME:interlink}
# the password for the postgres user - required for auto deployment and upgrade operations
database.admin.pwd=${DB_ADMIN_PWD:1nt3rl1nk}
# the url of the postgres server to use
database.server.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}

spring.datasource.url=${database.server.url}/${database.name}?stringtype=unspecified
spring.datasource.username=${DB_USER:interlink}
spring.datasource.password=${DB_PWD:1nt3rl1nk}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=${DS_PREP_STMT_CACHE_SIZE:250}
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=${DS_PREP_STMT_CACHE_SQL_LIMIT:2048}
spring.datasource.hikari.data-source-properties.cachePrepStmts=${DS_CACHE_PREP_STMTS:true}
spring.datasource.hikari.data-source-properties.useServerPrepStmts=${DS_USE_SERVER_PREP_STMTS:true}

# metrics configuration
#######################
management.endpoint.metrics.enabled=${MGMT_ENDPOINT_METRICS_ENABLED:true}
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# authentication mode (i.e. none, basic, oidc)
wapi.auth.mode=${INTERLINK_AUTH_MODE:basic}

# OpenId Connect configuration - only applies if AUTH_MODE=oidc
##############################
oidc.issuer=${OIDC_ISSUER:undefined}
oidc.jwkUrl=${OIDC_JWKURL:https://dev-447786.okta.com/oauth2/default/v1/keys}
oidc.redirectUri=${OIDC_REDIRECT_URI:undefined}
oidc.userAuthorizationUri=${OIDC_USER_AUTH_URI:undefined}
oidc.accessTokenUri=${OIDC_ACCESS_TOKEN_URI:undefined}
oidc.clientSecret=${OIDC_CLIENT_SECRET:undefined}
oidc.clientId=${OIDC_CLIENT_ID:undefined}
issuer-uri=${oidc.issuer}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${oidc.jwkUrl}

# logging
#########
#logging.level.org.springframework.security=DEBUG
#logging.level.org.springframework.web=DEBUG

# data at rest encryption
#########################
# encryption key 1
wapi.ek.1=${INTERLINK_EK_1:80FazXaQlpvkfqjCmq/l1wuczeBlQfYtidBcz1aLh6o=} 
# encryption key 2
wapi.ek.2=${INTERLINK_EK_2:IvRb/0jaKSCHrJNPvzxVbYugVYOk55HpiT5OrVt2n8E=}
# expiry date for the active key
wapi.ek.expiry.date=${INTERLINK_EK_EXPIRY_DATE:01-01-2100}
# the active key i.e. 1 or 2
wapi.ek.default=${INTERLINK_EK_ACTIVE:1}

# jwt signing
wapi.jwt.secret=${INTERLINK_JWT_SECRET:5nq+rJd2XV0JROOY0fcLeiFedrGyTe3WNBoZVqWqlps=}

# CSRF
wapi.csrf.enabled=${INTERLINK_CSRF_ENABLED:false}

# swagger-ui
wapi.swagger.enabled=${INTERLINK_SWAGGER_ENABLED:true}

# notification events
#####################
wapi.events.enabled=${INTERLINK_EVENTS_ENABLED:false}
wapi.events.server.host=${INTERLINK_EVENTS_SERVER_HOST:localhost}
wapi.events.server.port=${INTERLINK_EVENTS_SERVER_PORT:1883}
wapi.events.server.user=${INTERLINK_EVENTS_SERVER_USER:}
wapi.events.server.pwd=${INTERLINK_EVENTS_SERVER_PWD:}
wapi.events.client.retries=${INTERLINK_EVENTS_CLIENT_RETRIES:10000}
wapi.events.client.backoffperiod=${INTERLINK_EVENTS_CLIENT_BACKOFFPERIOD:10000}

# smtp
######
wapi.smtp.enabled=${INTERLINK_SMTP_ENABLED:false}
wapi.smtp.auth=${INTERLINK_SMTP_AUTH:true}
wapi.smtp.starttls.enable=${INTERLINK_SMTP_STARTTLS_ENABLE:true}
wapi.smtp.smtps.enabled=${INTERLINK_SMTP_SMTPS_ENABLE:true}
wapi.smtp.host=${INTERLINK_SMTP_HOST:localhost}
wapi.smtp.port=${INTERLINK_SMTP_PORT:25}
wapi.smtp.from.user=${INTERLINK_SMTP_FROM_USER:no-reply@interlink-admin}
wapi.smtp.from.pwd=${INTERLINK_SMTP_FROM_PWD:none}
wapi.smtp.pwd.reset.uri=${INTERLINK_SMTP_PWD_RESET_URI:http://localhost:3000/pwdreset}
wapi.smtp.pwd.setup.uri=${INTERLINK_SMTP_PWD_SETUP_URI:http://localhost:3000/pwdsetup}
# expiration time for password reset token in seconds
wapi.smtp.pwd.reset.tokenexpiry=${INTERLINK_SMTP_PWD_RESET_TOKENEXPIRY:600}

# pwd
#####
wapi.pwd.len=${INTERLINK_PWD_LEN:8}
wapi.pwd.upper=${INTERLINK_PWD_UP:1}
wapi.pwd.lower=${INTERLINK_PWD_LO:1}
wapi.pwd.digits=${INTERLINK_PWD_DIGITS:2}
wapi.pws.specialchars=${INTERLINK_PWD_SPECIALCHARS:0}
wapi.pws.specialcharsallowed=${INTERLINK_PWD_SPECIALCHARS_ALLOWED:false}